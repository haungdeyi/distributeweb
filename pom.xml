<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>com.huangdeyi.distribute</groupId>
  <artifactId>distribute-web</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>war</packaging>

  <name>distribute-web Maven Webapp</name>
  <!-- FIXME change it to the project's website -->
  <url>http://www.example.com</url>

  <!--统一管理jar包的版本-->
  <properties>
    <spring-version>4.3.12.RELEASE</spring-version>
    <jackson-version>2.12.1</jackson-version>
  </properties>

  <dependencies>
    <!-- spring-jdbc : spring对jdbc数据访问封装的所有类 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-jdbc</artifactId>
      <version>${spring-version}</version>
    </dependency>

    <!-- spring-webmvc : spring提供的web层实现 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-webmvc</artifactId>
      <version>${spring-version}</version>
    </dependency>

    <!-- spring-expression : spring 表达式 -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-expression</artifactId>
      <version>${spring-version}</version>
    </dependency>

    <!--依赖的servlet包-->
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>javax.servlet-api</artifactId>
      <version>3.1.0</version>
       <scope>provided</scope>
    </dependency>

    <!-- jstl : jstl标签 -->
    <dependency>
      <groupId>javax.servlet.jsp.jstl</groupId>
      <artifactId>jstl</artifactId>
      <version>1.2</version>
    </dependency>

    <!-- standart : 使用jstl和el时需要依赖的jar包 -->
    <!-- taglibs-standard-spec-1.2.5.jar（相当于之前的jstl.jar，属于接口定义类）-->
    <!-- taglibs-standard-impl-1.2.5.jar jar（相当于之前的standard.jar，属于实现类） -->
    <dependency>
      <groupId>taglibs</groupId>
      <artifactId>standard</artifactId>
      <version>1.1.2</version>
    </dependency>

    <!-- jackson : json数据转换-->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson-version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson-version}</version>
    </dependency>

    <!--引入shiro-->
    <dependency>
      <groupId>org.apache.shiro</groupId>
      <artifactId>shiro-all</artifactId>
      <version>1.4.1</version>
    </dependency>

    <!--spring提供的与redis的整合包-->
    <!--2.0版本之后取消注入RedisTemplate的构造方法，通过bluid方法注入RedisConnectionFactory获得-->
    <!--还要注意与jedis客户端版本之间的兼容问题-->
    <!--<dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
      <version>2.2.0.RELEASE</version>
    </dependency>-->
    <dependency>
      <groupId>org.springframework.data</groupId>
      <artifactId>spring-data-redis</artifactId>
      <version>1.8.6.RELEASE</version>
    </dependency>

    <!--
       负载均衡环境下实现session共享的策略：
       1、利用容器（Tomcat、Jetty）本身提供的共享机制
       2、利用nginx的ip_hash负载均衡策略
       3、自写工具类将session存储到redis实现共享
       4、利用spring-session实现
    -->
    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session</artifactId>
      <version>1.3.1.RELEASE</version>
    </dependency>

    <dependency>
      <groupId>org.springframework.session</groupId>
      <artifactId>spring-session-data-redis</artifactId>
      <version>1.3.1.RELEASE</version>
    </dependency>

    <!--引入redis客户端jedis依赖的jar包-->
    <dependency>
      <groupId>redis.clients</groupId>
      <artifactId>jedis</artifactId>
      <version>2.9.0</version>
    </dependency>

    <!--jedis依赖的连接池-->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-pool2</artifactId>
      <version>2.4.2</version>
    </dependency>

    <!--引入用户中心模块提供的API-->
    <!--会引入用户中心模块所依赖的jar包(如果当前lib中没有对应的jar包)-->
    <!--不会引入用户中心所配置的统一jar包管理版本号-->
    <dependency>
      <groupId>com.huangdeyi.distributed</groupId>
      <artifactId>userService</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <!--引入订单中心的API-->
    <dependency>
      <groupId>com.huangdeyi.distributed</groupId>
      <artifactId>orderservice</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>
  </dependencies>
</project>
